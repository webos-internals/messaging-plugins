--- messaging-luna-service.js	Wed Oct 21 17:25:19 2009
+++ messaging-luna-service.new	Thu Jan 28 01:40:07 2010
@@ -7,6 +7,7 @@
 	displayIdentifier: 'palm://com.palm.display/control',
 	telephonyIdentifier: 'palm://com.palm.telephony',
 	systemManagerIdentifier: 'palm://com.palm.systemmanager',
+	MessagingPlugins: 'palm://im.libpurpleext.greg',
 	
 	launchMessaging: function(sceneController, params){
 		return sceneController.serviceRequest("palm://com.palm.applicationManager", {
@@ -1009,5 +1010,52 @@
 		  method: 'setSMSCAddressAndEmailGateway',
 		  parameters: {smscAddr:address, emailGateway: gateway}
 	  });
+	},
+  /************************
+   * Methods for LibpurpleAdapter
+   ************************/
+	setserver: function(sceneController,serviceName,ServerName,ServerPort,TLS,ServerLogin, Proxy, UserAgent) {
+	    return sceneController.serviceRequest(MessagingMojoService.MessagingPlugins, {
+	      method: 'setserver',
+	      parameters: {serviceName:serviceName, ServerName:ServerName, ServerPort:ServerPort, TLS:TLS, ServerLogin:ServerLogin, Proxy:Proxy, UserAgent:UserAgent}
+		});  
+	},
+	getserver: function(onSuccess, sceneController, serviceName) {
+		return sceneController.serviceRequest(MessagingMojoService.MessagingPlugins,{
+			method: 'getserver',
+			parameters: {serviceName:serviceName},
+			onSuccess: onSuccess
+		});   	
+	},  
+	setpreference: function(sceneController,serviceName, preference, state) {
+	    return sceneController.serviceRequest(MessagingMojoService.MessagingPlugins, {
+	      method: 'setpreference',
+	      parameters: {serviceName:serviceName, preference:preference, state:state}
+		});  
+	},
+	getpreference: function(onSuccess, sceneController, serviceName, preference) {
+		return sceneController.serviceRequest(MessagingMojoService.MessagingPlugins,{
+			method: 'getpreference',
+			parameters: {serviceName:serviceName, preference:preference},
+			onSuccess: onSuccess
+		});   	
+	},
+	clearserver: function(sceneController,serviceName) {
+	    return sceneController.serviceRequest(MessagingMojoService.MessagingPlugins, {
+	      method: 'clearserver',
+	      parameters: {serviceName:serviceName}
+		});  
+	},
+	AccountLogOut: function(sceneController,accountId) {
+		return sceneController.serviceRequest(MessagingMojoService.identifier,{
+			method: 'logout',
+			parameters: {accountId: accountId},
+		});
+	},
+	EnableContactsReadWrite: function(sceneController,PluginName) {
+	    return sceneController.serviceRequest(MessagingMojoService.MessagingPlugins, {
+	      method: 'EnableContactsReadWrite',
+	      parameters: {PluginName:PluginName}
+		});  
 	}
 };
\ No newline at end of file
