diff -rupN msn-pecan-0.1.1/Makefile msn-pecan-0.1.1-new//Makefile
--- msn-pecan-0.1.1/Makefile	2010-08-28 10:48:09.000000000 -0500
+++ msn-pecan-0.1.1-new//Makefile	2011-03-27 09:01:42.480553000 -0600
@@ -17,9 +17,9 @@ GIO_LIBS := $(shell pkg-config --libs gi
 
 # default configuration options
 CVR := y
-LIBSIREN := y
-LIBMSPACK := y
-PLUS_SOUNDS := y
+LIBSIREN := n
+LIBMSPACK := n
+PLUS_SOUNDS := n
 DEBUG := y
 DIRECTCONN := y
 
diff -rupN msn-pecan-0.1.1/Makefile~ msn-pecan-0.1.1-new//Makefile~
--- msn-pecan-0.1.1/Makefile~	1969-12-31 18:00:00.000000000 -0600
+++ msn-pecan-0.1.1-new//Makefile~	2011-03-27 09:01:42.480553000 -0600
@@ -0,0 +1,279 @@
+CC := $(CROSS_COMPILE)gcc
+WINDRES := $(CROSS_COMPILE)windres
+
+XGETTEXT := xgettext
+MSGFMT := msgfmt
+
+PLATFORM := $(shell $(CC) -dumpmachine | cut -f 3 -d -)
+
+PURPLE_CFLAGS := $(shell pkg-config --cflags purple)
+PURPLE_LIBS := $(shell pkg-config --libs purple)
+PURPLE_LIBDIR := $(shell pkg-config --variable=libdir purple)
+PURPLE_DATADIR := $(shell pkg-config --variable=datadir purple)
+PURPLE_PLUGINDIR := $(PURPLE_LIBDIR)/purple-2
+
+GIO_CFLAGS := $(shell pkg-config --cflags gio-2.0)
+GIO_LIBS := $(shell pkg-config --libs gio-2.0)
+
+# default configuration options
+CVR := n
+LIBSIREN := n
+LIBMSPACK := n
+PLUS_SOUNDS := n
+DEBUG := n
+DIRECTCONN := y
+
+CFLAGS := -O2
+
+EXTRA_WARNINGS := -Wall -Wextra -Wformat-nonliteral -Wcast-align -Wpointer-arith \
+	-Wbad-function-cast -Wmissing-prototypes -Wstrict-prototypes \
+	-Wmissing-declarations -Winline -Wundef -Wnested-externs -Wcast-qual \
+	-Wshadow -Wwrite-strings -Wno-unused-parameter -Wfloat-equal -ansi -std=c99
+
+SIMPLE_WARNINGS := -Wextra -ansi -std=c99 -Wno-unused-parameter
+
+OTHER_WARNINGS := -D_FORTIFY_SOURCE=2 -fstack-protector -g3 -Wdisabled-optimization \
+	-Wendif-labels -Wformat=2 -Wstack-protector -Wswitch
+
+CFLAGS += -Wall # $(EXTRA_WARNINGS)
+
+ifdef DEBUG
+  override CFLAGS += -ggdb
+endif
+
+ifdef DEVEL
+  override CFLAGS += -DPECAN_DEVEL
+endif
+
+override CFLAGS += -D_XOPEN_SOURCE
+#override CFLAGS += -I. -DENABLE_NLS -DHAVE_LIBPURPLE -DPURPLE_DEBUG
+override CFLAGS += -I. -DENABLE_NLS -DHAVE_LIBPURPLE
+
+ifdef CVR
+  override CFLAGS += -DPECAN_CVR
+endif
+
+ifndef DO_NOT_USE_PSM
+  override CFLAGS += -DPECAN_USE_PSM
+endif
+
+ifdef LIBSIREN
+  override CFLAGS += -DPECAN_LIBSIREN
+  LIBSIREN_LIBS := -lm
+endif
+
+ifdef LIBMSPACK
+  override CFLAGS += -DPECAN_LIBMSPACK
+  LIBMSPACK_LIBS := -lm
+endif
+
+ifdef PLUS_SOUNDS
+  override CFLAGS += -DRECEIVE_PLUS_SOUNDS
+endif
+
+ifdef GIO
+  override CFLAGS += -DUSE_GIO
+endif
+
+# extra debugging
+override CFLAGS += -DPECAN_DEBUG_SLP
+
+LDFLAGS := -Wl,--no-undefined
+
+objects := msn.o \
+	   nexus.o \
+	   notification.o \
+	   page.o \
+	   session.o \
+	   switchboard.o \
+	   sync.o \
+	   pn_log.o \
+	   pn_printf.o \
+	   pn_util.o \
+	   pn_buffer.o \
+	   pn_error.o \
+	   pn_status.o \
+	   pn_oim.o \
+	   pn_dp_manager.o \
+	   cmd/cmdproc.o \
+	   cmd/command.o \
+	   cmd/msg.o \
+	   cmd/table.o \
+	   cmd/transaction.o \
+	   io/pn_parser.o \
+	   ab/pn_group.o \
+	   ab/pn_contact.o \
+	   ab/pn_contactlist.o \
+	   io/pn_stream.o \
+	   io/pn_node.o \
+	   io/pn_cmd_server.o \
+	   io/pn_http_server.o \
+	   io/pn_ssl_conn.o \
+	   fix_purple.o
+
+ifdef CVR
+  objects += cvr/pn_peer_call.o \
+	     cvr/pn_peer_link.o \
+	     cvr/pn_peer_msg.o \
+	     cvr/pn_msnobj.o
+  objects += libpurple/xfer.o
+endif
+
+ifdef DIRECTCONN
+  objects += cvr/pn_direct_conn.o
+  objects += io/pn_dc_conn.o
+  override CFLAGS += -DMSN_DIRECTCONN
+endif
+
+ifdef LIBSIREN
+  objects += ext/libsiren/common.o \
+	     ext/libsiren/dct4.o \
+	     ext/libsiren/decoder.o \
+	     ext/libsiren/huffman.o \
+	     ext/libsiren/rmlt.o \
+	     pn_siren7.o
+endif
+
+ifdef LIBMSPACK
+  objects += ext/libmspack/cabd.o \
+	     ext/libmspack/mszipd.o \
+	     ext/libmspack/lzxd.o \
+	     ext/libmspack/qtmd.o \
+	     ext/libmspack/system.o
+endif
+
+sources := $(objects:.o=.c)
+deps := $(objects:.o=.d)
+
+CATALOGS := ar da de eo es fi fr tr hu it nb nl pt_BR pt sr sv tr zh_CN zh_TW
+
+ifeq ($(PLATFORM),darwin)
+  SHLIBEXT := dylib
+else
+ifeq ($(PLATFORM),mingw32)
+  SHLIBEXT := dll
+  LDFLAGS += -Wl,--enable-auto-image-base -L./win32
+  objects += win32/resource.res
+else
+  SHLIBEXT := so
+endif
+endif
+
+ifdef STATIC
+  SHLIBEXT := a
+  override CFLAGS += -DSTATIC_PECAN
+else
+ifneq ($(PLATFORM),mingw32)
+  override CFLAGS += -fPIC
+endif
+endif
+
+plugin := libmsn-pecan.$(SHLIBEXT)
+
+.PHONY: clean
+
+all: $(plugin)
+
+version := $(shell ./get-version)
+
+# pretty print
+ifndef V
+QUIET_CC    = @echo '   CC         '$@;
+QUIET_LINK  = @echo '   LINK       '$@;
+QUIET_CLEAN = @echo '   CLEAN      '$@;
+QUIET_MO    = @echo '   MSGFMT     '$@;
+QUIET_WR    = @echo '   WINDRES    '$@;
+endif
+
+D = $(DESTDIR)
+
+plugin_libs := $(PURPLE_LIBS) $(GIO_LIBS)
+
+ifdef LIBSIREN
+  plugin_libs += $(LIBSIREN_LIBS)
+endif
+
+ifdef LIBMSPACK
+  plugin_libs += $(LIBMSPACK_LIBS)
+endif
+
+$(plugin): $(objects)
+$(plugin): CFLAGS := $(CFLAGS) $(PURPLE_CFLAGS) $(GIO_CFLAGS) $(FALLBACK_CFLAGS) -D VERSION='"$(version)"'
+$(plugin): LIBS := $(plugin_libs)
+
+messages.pot: $(sources)
+	$(XGETTEXT) -m -c --keyword --keyword=_ --keyword=N_ -o $@ $^
+
+%.dylib::
+	$(QUIET_LINK)$(CC) $(LDFLAGS) -dynamiclib -o $@ $^ $(LIBS)
+
+%.so %.dll::
+	$(QUIET_LINK)$(CC) $(LDFLAGS) -shared -o $@ $^ $(LIBS)
+
+%.a::
+	$(QUIET_LINK)$(AR) rcs $@ $^
+
+%.o:: %.c
+	$(QUIET_CC)$(CC) $(CFLAGS) -MMD -o $@ -c $<
+
+%.res:: %.rc
+	$(QUIET_WR)$(WINDRES) $< -O coff -o $@
+
+clean:
+	$(QUIET_CLEAN)$(RM) $(plugin) $(objects) $(deps) `find -name '*.mo'`
+
+%.mo:: %.po
+	$(QUIET_MO)$(MSGFMT) -c -o $@ $<
+
+dist: base := msn-pecan-$(version)
+dist:
+	git archive --format=tar --prefix=$(base)/ HEAD > /tmp/$(base).tar
+	mkdir -p $(base)
+	git-changelog > $(base)/ChangeLog
+	chmod 664 $(base)/ChangeLog
+	tar --append -f /tmp/$(base).tar --owner root --group root $(base)/ChangeLog
+	echo $(version) > $(base)/.version
+	chmod 664 $(base)/.version
+	tar --append -f /tmp/$(base).tar --owner root --group root $(base)/.version
+	rm -r $(base)
+	bzip2 /tmp/$(base).tar
+
+install: $(plugin)
+	install -D $(plugin) $(D)/$(PURPLE_PLUGINDIR)/$(plugin)
+	# chcon -t textrel_shlib_t $(D)/$(PURPLE_PLUGINDIR)/$(plugin) # for selinux
+
+uninstall:
+	rm -f $(D)/$(PURPLE_PLUGINDIR)/$(plugin)
+	for x in $(CATALOGS); do \
+	rm -f $(D)/$(PURPLE_DATADIR)/locale/$$x/LC_MESSAGES/libmsn-pecan.mo; \
+	done
+
+update_locales: messages.pot
+	for x in $(CATALOGS); do \
+	msgmerge -N -U --backup=off po/$$x.po $<; \
+	done
+
+locales: $(foreach e,$(CATALOGS),po/$(e).mo)
+
+install_locales: locales
+	for x in $(CATALOGS); do \
+	install -m 644 -D po/$$x.mo $(D)/$(PURPLE_DATADIR)/locale/$$x/LC_MESSAGES/libmsn-pecan.mo; \
+	done
+
+win32-check:
+	test -f win32/libintl.dll.a
+
+win32: D := libmsn-pecan
+win32: win32-check $(plugin) locales
+	mkdir -p $(D)/plugins
+	cp $(plugin) libmsn-pecan-$(version)-dbg.dll
+	$(CROSS_COMPILE)strip $(plugin)
+	cp $(plugin) $(D)/plugins/
+	for x in $(CATALOGS); do \
+	mkdir -p $(D)/locale/$$x/LC_MESSAGES/; \
+	cp po/$$x.mo $(D)/locale/$$x/LC_MESSAGES/libmsn-pecan.mo; \
+	done
+	cp COPYING $(D)
+	tar -cf /tmp/libmsn-pecan.tar $(D)
+
+-include $(deps)
diff -rupN msn-pecan-0.1.1/pn_log.c msn-pecan-0.1.1-new//pn_log.c
--- msn-pecan-0.1.1/pn_log.c	2010-08-28 10:48:09.000000000 -0500
+++ msn-pecan-0.1.1-new//pn_log.c	2011-03-27 09:01:42.448553000 -0600
@@ -159,7 +159,8 @@ pn_base_log_helper (guint level,
     if (level <= PN_LOG_LEVEL_INFO || level == PN_LOG_LEVEL_TEST) {
         char *arg_s;
         arg_s = g_strdup_printf("%s\n", tmp);
-        ops->print(purple_level, "msn-pecan", arg_s);
+//	ops->print(purple_level, "msn-pecan", arg_s);
+
         g_free(arg_s);
     }
 #endif
diff -rupN msn-pecan-0.1.1/pn_log.c~ msn-pecan-0.1.1-new//pn_log.c~
--- msn-pecan-0.1.1/pn_log.c~	1969-12-31 18:00:00.000000000 -0600
+++ msn-pecan-0.1.1-new//pn_log.c~	2011-03-27 09:01:42.480553000 -0600
@@ -0,0 +1,179 @@
+/**
+ * Copyright (C) 2007-2009 Felipe Contreras
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version 2
+ * of the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
+ */
+
+#include "pn_log.h"
+#include "pn_printf.h"
+
+#ifdef PN_DEBUG
+
+/* #define PURPLE_DEBUG */
+/* #define PN_DEBUG_FILE */
+
+#include <fcntl.h>
+#include <unistd.h>
+
+#include <glib/gstdio.h>
+
+#ifdef PURPLE_DEBUG
+/* libpurple stuff. */
+#include <debug.h>
+#endif /* PURPLE_DEBUG */
+
+static inline const gchar *
+log_level_to_string (PecanLogLevel level)
+{
+    switch (level)
+    {
+        case PN_LOG_LEVEL_NONE: return "NONE"; break;
+        case PN_LOG_LEVEL_ERROR: return "ERROR"; break;
+        case PN_LOG_LEVEL_WARNING: return "WARNING"; break;
+        case PN_LOG_LEVEL_INFO: return "INFO"; break;
+        case PN_LOG_LEVEL_DEBUG: return "DEBUG"; break;
+        case PN_LOG_LEVEL_LOG: return "LOG"; break;
+        case PN_LOG_LEVEL_TEST: return "TEST"; break;
+        default: return "Unknown"; break;
+    }
+}
+
+#ifdef PN_DUMP_FILE
+void
+pn_dump_file (const gchar *buffer,
+              gsize len)
+{
+    gint fd;
+    static guint c;
+    gchar *basename;
+    gchar *fullname;
+
+    basename = pn_strdup_printf ("pecan-%.6u.bin", c++);
+
+    fullname = g_build_filename (g_get_tmp_dir (), basename, NULL);
+
+    g_free (basename);
+
+    fd = g_open (fullname, O_CREAT | O_WRONLY, S_IRUSR | S_IWUSR);
+
+    if (fd)
+    {
+        write (fd, buffer, len);
+        close (fd);
+    }
+}
+#endif /* PN_DUMP_FILE */
+
+void
+pn_base_log_helper (guint level,
+                    const gchar *file,
+                    const gchar *function,
+                    gint line,
+                    const gchar *fmt,
+                    ...)
+{
+    gchar *tmp;
+    va_list args;
+    gboolean console_print = FALSE;
+
+    if (level > PECAN_LOG_LEVEL && level != PN_LOG_LEVEL_TEST)
+        return;
+
+    va_start (args, fmt);
+
+#if defined(PECAN_DEVEL)
+    console_print = TRUE;
+#else
+    if (level == PN_LOG_LEVEL_TEST)
+        console_print = TRUE;
+#endif
+
+#if defined(PURPLE_DEBUG)
+    PurpleDebugLevel purple_level;
+    PurpleDebugUiOps *ops;
+
+    switch (level) {
+        case PN_LOG_LEVEL_ERROR:
+            purple_level = PURPLE_DEBUG_ERROR; break;
+        case PN_LOG_LEVEL_WARNING:
+            purple_level = PURPLE_DEBUG_WARNING; break;
+        case PN_LOG_LEVEL_INFO:
+            purple_level = PURPLE_DEBUG_INFO; break;
+        case PN_LOG_LEVEL_DEBUG:
+        case PN_LOG_LEVEL_TEST:
+            purple_level = PURPLE_DEBUG_MISC; break;
+        case PN_LOG_LEVEL_LOG:
+            purple_level = PURPLE_DEBUG_MISC; break;
+        default:
+            purple_level = PURPLE_DEBUG_MISC; break;
+    }
+
+    if (purple_debug_is_enabled())
+        console_print = TRUE;
+
+    ops = purple_debug_get_ui_ops();
+
+    if (!console_print) {
+        if (!ops || !ops->print ||
+            (ops->is_enabled && !ops->is_enabled(purple_level, "msn-pecan")))
+        {
+            return;
+        }
+    }
+#endif
+
+    tmp = pn_strdup_vprintf (fmt, args);
+
+#if defined(PN_DEBUG_FILE)
+    {
+        static FILE *logfile;
+        if (!logfile)
+        {
+            gint fd;
+            fd = g_file_open_tmp ("msn-pecan-XXXXXX", NULL, NULL);
+            if (fd)
+                logfile = fdopen (fd, "w");
+        }
+        if (logfile)
+        {
+            g_fprintf (logfile, "%s\t%s:%d:%s()\t%s\n",
+                       log_level_to_string (level),
+                       file, line, function,
+                       tmp);
+        }
+    }
+#else
+#if defined(PURPLE_DEBUG)
+    if (level <= PN_LOG_LEVEL_INFO || level == PN_LOG_LEVEL_TEST) {
+        char *arg_s;
+        arg_s = g_strdup_printf("%s\n", tmp);
+        ops->print(purple_level, "msn-pecan", arg_s);
+        g_free(arg_s);
+    }
+#endif
+#endif /* PN_DEBUG_FILE */
+
+    if (console_print)
+        g_print ("%s %s:%d:%s() %s\n",
+                 log_level_to_string (level),
+                 file, line, function,
+                 tmp);
+
+    g_free (tmp);
+
+    va_end (args);
+}
+
+#endif /* PN_DEBUG */
